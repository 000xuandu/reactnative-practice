# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
fastlane_require 'dotenv'

# Variables
build_version = 1;
android_version_name = '';
ios_version_name = '';

before_all do |lane, options|
  Dotenv.load(".env.#{ENV['ENV']}")
  package = load_json(json_path: "package.json")
  android_version_name = package["android-version"]
  ios_version_name = package["ios-version"]
  build_version = Time.now.to_i.to_s
end

platform :android do
  desc "Runs android's lane'"
  lane :update_config do
    update_android_strings(
      block: lambda { |strings|
        strings['app_name'] = ENV['APP_NAME']
      }
    )
    android_set_version_code(
      version_code: build_version,
      gradle_file: "android/app/build.gradle"
    )
    android_set_version_name(
      version_name: android_version_name,
      gradle_file: "android/app/build.gradle"
    )
  end

  desc "Build APK Release Staging"
  lane :build_apk_staging do
    update_config
    gradle(
      task: 'clean assemble',
      build_type: 'Release',
      project_dir: 'android',
      system_properties: {
        "ENVFILE": "fastlane/.env.staging"
      }
    )
  end

  desc "Build APK Release Production"
  lane :build_apk_production do
    update_config
    gradle(
      task: 'clean assemble',
      build_type: 'Release',
      project_dir: 'android',
      system_properties: {
        "ENVFILE": "fastlane/.env.production"
      }
    )
  end

  desc "Build AAB Release Production"
  lane :build_aab_production do
    update_config
    gradle(
      task: "bundle",
      build_type: 'Release',
      project_dir: 'android',
      system_properties: {
        "ENVFILE": "fastlane/.env.production"
      }
    )
  end

  desc "Distribute Staging"
  lane :distribute_staging do
      update_config
      build_apk_staging
      firebase_app_distribution(
        app: "1:563749439527:android:c0b163b141b2f52a84e602",
        android_artifact_type: "APK",
        groups: "rn-practice-test",
        release_notes_file: "fastlane/android-release-notes-staging.txt"
      )
  end

  desc "Distribute Production"
  lane :distribute_production do
      update_config
      build_apk_production
      firebase_app_distribution(
        app: "1:563749439527:android:c0b163b141b2f52a84e602",
        android_artifact_type: "APK",
        groups: "rn-practice-test",
        release_notes_file: "fastlane/android-release-notes-production.txt"
      )
  end
end

platform :ios do
  desc "Runs ios's lane"
  lane :update_config do
    xcodeproj = "ios/#{ENV['IOS_PROJECT_NAME']}.xcodeproj"
    plist_path = "#{ENV['IOS_PROJECT_NAME']}/Info.plist"
    update_app_identifier(
      xcodeproj: xcodeproj,
      plist_path: plist_path,
      app_identifier: ENV['APP_IDENTIFIER']
    )
    update_info_plist(
      xcodeproj: xcodeproj,
      plist_path: plist_path,
      block: lambda { |plist|
        plist['CFBundleName'] = ENV['APP_NAME']
        plist['CFBundleDisplayName'] = ENV['APP_NAME']
        plist['CFBundleShortVersionString'] = ios_version_name
        plist['CFBundleVersion'] = build_version
      },
    )
  end
end
